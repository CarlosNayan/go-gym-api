// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: metrics.proto

package monitoringpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HttpMetric struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	HttpMethod     string                 `protobuf:"bytes,1,opt,name=http_method,json=httpMethod,proto3" json:"http_method,omitempty"`
	HttpRoute      string                 `protobuf:"bytes,2,opt,name=http_route,json=httpRoute,proto3" json:"http_route,omitempty"`
	OriginalUrl    string                 `protobuf:"bytes,3,opt,name=original_url,json=originalUrl,proto3" json:"original_url,omitempty"`
	HttpStatusCode string                 `protobuf:"bytes,4,opt,name=http_status_code,json=httpStatusCode,proto3" json:"http_status_code,omitempty"`
	DurationMs     float64                `protobuf:"fixed64,5,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	Instance       string                 `protobuf:"bytes,6,opt,name=instance,proto3" json:"instance,omitempty"`
	CreatedAtUnix  int64                  `protobuf:"varint,7,opt,name=created_at_unix,json=createdAtUnix,proto3" json:"created_at_unix,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *HttpMetric) Reset() {
	*x = HttpMetric{}
	mi := &file_metrics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpMetric) ProtoMessage() {}

func (x *HttpMetric) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpMetric.ProtoReflect.Descriptor instead.
func (*HttpMetric) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{0}
}

func (x *HttpMetric) GetHttpMethod() string {
	if x != nil {
		return x.HttpMethod
	}
	return ""
}

func (x *HttpMetric) GetHttpRoute() string {
	if x != nil {
		return x.HttpRoute
	}
	return ""
}

func (x *HttpMetric) GetOriginalUrl() string {
	if x != nil {
		return x.OriginalUrl
	}
	return ""
}

func (x *HttpMetric) GetHttpStatusCode() string {
	if x != nil {
		return x.HttpStatusCode
	}
	return ""
}

func (x *HttpMetric) GetDurationMs() float64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *HttpMetric) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *HttpMetric) GetCreatedAtUnix() int64 {
	if x != nil {
		return x.CreatedAtUnix
	}
	return 0
}

type AckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckResponse) Reset() {
	*x = AckResponse{}
	mi := &file_metrics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckResponse) ProtoMessage() {}

func (x *AckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckResponse.ProtoReflect.Descriptor instead.
func (*AckResponse) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *AckResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_metrics_proto protoreflect.FileDescriptor

const file_metrics_proto_rawDesc = "" +
	"\n" +
	"\rmetrics.proto\x12\n" +
	"monitoring\"\xfe\x01\n" +
	"\n" +
	"HttpMetric\x12\x1f\n" +
	"\vhttp_method\x18\x01 \x01(\tR\n" +
	"httpMethod\x12\x1d\n" +
	"\n" +
	"http_route\x18\x02 \x01(\tR\thttpRoute\x12!\n" +
	"\foriginal_url\x18\x03 \x01(\tR\voriginalUrl\x12(\n" +
	"\x10http_status_code\x18\x04 \x01(\tR\x0ehttpStatusCode\x12\x1f\n" +
	"\vduration_ms\x18\x05 \x01(\x01R\n" +
	"durationMs\x12\x1a\n" +
	"\binstance\x18\x06 \x01(\tR\binstance\x12&\n" +
	"\x0fcreated_at_unix\x18\a \x01(\x03R\rcreatedAtUnix\"A\n" +
	"\vAckResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\x9e\x01\n" +
	"\x11MonitoringService\x12A\n" +
	"\x0eSendHttpMetric\x12\x16.monitoring.HttpMetric\x1a\x17.monitoring.AckResponse\x12F\n" +
	"\x11StreamHttpMetrics\x12\x16.monitoring.HttpMetric\x1a\x17.monitoring.AckResponse(\x01B\x10Z\x0e./monitoringpbb\x06proto3"

var (
	file_metrics_proto_rawDescOnce sync.Once
	file_metrics_proto_rawDescData []byte
)

func file_metrics_proto_rawDescGZIP() []byte {
	file_metrics_proto_rawDescOnce.Do(func() {
		file_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_metrics_proto_rawDesc), len(file_metrics_proto_rawDesc)))
	})
	return file_metrics_proto_rawDescData
}

var file_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_metrics_proto_goTypes = []any{
	(*HttpMetric)(nil),  // 0: monitoring.HttpMetric
	(*AckResponse)(nil), // 1: monitoring.AckResponse
}
var file_metrics_proto_depIdxs = []int32{
	0, // 0: monitoring.MonitoringService.SendHttpMetric:input_type -> monitoring.HttpMetric
	0, // 1: monitoring.MonitoringService.StreamHttpMetrics:input_type -> monitoring.HttpMetric
	1, // 2: monitoring.MonitoringService.SendHttpMetric:output_type -> monitoring.AckResponse
	1, // 3: monitoring.MonitoringService.StreamHttpMetrics:output_type -> monitoring.AckResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_metrics_proto_init() }
func file_metrics_proto_init() {
	if File_metrics_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_metrics_proto_rawDesc), len(file_metrics_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metrics_proto_goTypes,
		DependencyIndexes: file_metrics_proto_depIdxs,
		MessageInfos:      file_metrics_proto_msgTypes,
	}.Build()
	File_metrics_proto = out.File
	file_metrics_proto_goTypes = nil
	file_metrics_proto_depIdxs = nil
}
